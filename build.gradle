buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.0"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "Heslington Hustle"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.20'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":desktop") {
    apply plugin: "java-library"

    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":core") {
    apply plugin: "java-library"

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.google.code.gson:gson:2.8.6"
    }
}

project(":test") {
    apply plugin: "java"
    apply plugin: "jacoco"

    sourceSets {
        test {
            java {
                srcDirs = ["src"]
            }
            resources {
                srcDirs = ["../assets"]
            }
        }
    }

    dependencies {
        implementation project(":core")
        testImplementation "junit:junit:4.+"
        testImplementation 'org.mockito:mockito-core:5.11.0'
        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }

    task copyAssets(type: Copy) {
        from rootProject.file("assets")
        into "build/assets"
    }

    test {
        dependsOn copyAssets
        systemProperty 'assetsDir', file("$buildDir/assets").absolutePath
        useJUnit {
            includeCategories 'com.eng1.heslingtonhustle.GdxTestRunner'
        }
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test
        sourceSets project(":core").sourceSets.main
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['**/*Tests.*', '**/GdxTestRunner.*'])
            }))
        }
    }
}
